variables:
  SECRET_KEY: ${SECRET_KEY}
  DEBUG: True
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  USERNAME: ${USERNAME}
  PASSWORD: ${PASSWORD}

default:
  image: python:latest

stages:          # List of stages for jobs, and their order of execution

  - package

cache:
  paths:
        - .cache/pip
  key: "$CI_JOB_NAME"

# compilation:
#   stage: build
#   before_script:
#   - pip install -r requirements.txt
#   script:
#     - python manage.py makemigrations
#     - python manage.py migrate
#     - python manage.py check

# tests:
#   stage: test
#   before_script:
#   - pip install -r requirements.txt
#   script:
#     - echo "Testing the application...This will take about 10 seconds."
#     - python manage.py test

# coverage:
#   stage: test
#   before_script:
#   - pip install -r requirements.txt
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - pytest --cov=. --cov-report term --cov-report xml:coverage.xml
#     - sleep 10
#     - echo "Coverage test over with no issues" 
#   artifacts:
#     reports:
#       coverage_report:
#         coverage_format: cobertura
#         path: coverage.xml
  
# linting:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   before_script:
#   - pip install -r requirements.txt
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - flake8
#     - sleep 10
#     - echo "No lint issues found."

packaging:
  stage: package
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login --username USERNAME --password PASSWORD
    - docker build -t $CI_COMMIT_SHORT_SHA .
    - docker push $CI_COMMIT_SHORT_SHA
